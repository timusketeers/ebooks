vim集成YCM插件过程:
1. 源码编译clang/llvm:
   1).下载llvm源码:
   [root@linux]# wget http://llvm.org/releases/3.6.0/llvm-3.6.0.src.tar.xz
   [root@linux]# tar xf llvm-3.6.0.src.tar.xz
   [root@linux]# mv llvm-3.6.0.src llvm
   
   2).下载clang的源代码
   [root@linux]# cd llvm/tools
   [root@linux]# wget http://llvm.org/releases/3.6.0/cfe-3.6.0.src.tar.xz
   [root@linux]# tar xf cfe-3.6.0.src.tar.xz
   [root@linux]# mv cfe-3.6.0.src clang
   [root@linux]# cd ../..
   
   3).下载clang-tools-extra的源代码
   [root@linux]# cd llvm/tools/clang/tools
   [root@linux]# wget http://llvm.org/releases/3.6.0/clang-tools-extra-3.6.0.src.tar.xz
   [root@linux]# tar xf clang-tools-extra-3.6.0.src.tar.xz
   [root@linux]# mv clang-tools-extra-3.6.0.src  extra
   [root@linux]# cd ../../../..
   
   4).下载compiler-rt的源代码
   [root@linux]# cd llvm/projects
   [root@linux]# wget http://llvm.org/releases/3.6.0/compiler-rt-3.6.0.src.tar.xz
   [root@linux]# tar xf compiler-rt-3.6.0.src.tar.xz
   [root@linux]# mv compiler-rt-3.6.0.src compiler-rt
   [root@linux]# cd ../..
   
   在llvm源码目录同级目录中创建一个目录build目录
   [root@linux]# mkdir build
   
  完成之后的目录如下所示：
  ./
   |——llvm                      (llvm-3.6.0.src.tar.xz)
   |    |——tools
   |    |    |——clang           (cfe-3.6.0.src.tar.xz)
   |    |         |——tools
   |    |             |——extra  (compiler-rt-3.6.0.src.tar.xz)
   |    |——projects
   |         |——compiler-rt     (compiler-rt-3.6.0.src.tar.xz)
   |——build

   5).编译安装clang/llvm
   [root@linux]# cd build
   [root@linux]# cmake ../llvm -DLLVM_TARGETS_TO_BUILD=X86 -DCMAKE_BUILD_TYPE=Debug (或者Release)
   [root@linux]# make -j4                                                           (数字为你的CPU的核数)进行编译
   
   进入build/bin下，观察可以发现有很多的可执行文件，包括clang, clang++, clang-4.0等。
   然后在build目录下执行sudo make install进行安装了，成功安装之后就可以直接在终端输入clang hello.c -o hello了
   
   [root@linux]# make install         （安装）
   
2. cmake源码编译:
      $ tar -zxvf cmake-3.2.3.tar.gz
      $ cd cmake-3.2.3
      $ ./bootstrap
      $ make
      $ make install
